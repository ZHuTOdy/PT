// Generated by CoffeeScript 1.12.7
var day_format, export_yewu_table, get_pro_sum, init_date, sort_val, table, time_dis, title;

init_pro("pro_name", pro_names_conf);

$('.back').click(function(event) {
  loadpage($('#mainframe'), 'selector.html');
  return false;
});

init_date = function() {
  var date_format, from_time, to_time;
  date_format = ' YYYY\年MM\月DD\日';
  from_time = +moment().startOf('day');
  to_time = +moment().endOf('day');
  $('.from.date').attr('time', from_time).find('.text').text(moment(from_time).format(date_format));
  $('.to.date').attr('time', to_time).find('.text').text(moment(to_time).format(date_format));
  $('.datepicker.datepicker-dropdown.dropdown-menu').remove();
  return $('.date').fdatepicker().on('changeDate', function(ev) {
    var end, self, start, value;
    value = ev.date.valueOf();
    self = $(this);
    self.find('.text').text(moment(value).format(date_format));
    start = +moment(value).startOf('days');
    end = +moment(value).endOf('days');
    if (self.hasClass('from')) {
      self.attr('time', start);
    } else {
      self.attr('time', end);
    }
    table.fnDraw();
    return false;
  });
};

init_date();

title = [
  {
    data: "create_at"
  }, {
    data: "batch_no"
  }, {
    data: "source.bill_num"
  }, {
    data: "picture"
  }, {
    data: "source.agency"
  }, {
    data: "channel"
  }, {
    data: "source.types"
  }, {
    data: "stick_level"
  }, {
    data: "scan_at"
  }, {
    data: "download_at"
  }, {
    data: "upload_at"
  }, {
    data: "deal_at"
  }, {
    data: "relay_at"
  }, {
    data: "status"
  }, {
    data: "stage"
  }, {
    data: "question"
  }, {
    data: "questions_all_value",
    render: function(questions_all_value) {
      return '<div style="height: 100px;overflow-y: auto;width:100px">' + questions_all_value + "</div>";
    }
  }
];

$.fn.dataTable.Api.register('clearPipeline()', function() {
  return this.iterator('table', function(settings) {
    return settings.clearCache = true;
  });
});

sort_val = {
  "asc": 1,
  "desc": -1
};

day_format = function(time) {
  if (!/^\d{14}$/.test(time)) {
    return "";
  }
  return moment(parseInt(time), "YYYYMMDDHHmmss").format("YYYY/MM/DD HH:mm");
};

time_dis = function(begin, over) {
  var dis;
  if (!/^\d{14}$/.test(begin) || !/^\d{14}$/.test(over) || over < begin) {
    return "";
  }
  begin = +moment(begin, "YYYYMMDDHHmmss");
  over = +moment(over, "YYYYMMDDHHmmss");
  dis = over - begin;
  return parseInt(moment.duration(dis).asHours()) + ":" + moment.duration(dis).minutes() + ":" + moment.duration(dis).seconds();
};

$.fn.dataTable.pipeline = function(opts) {
  return function(request, drawCallback, settings) {
    var end_date, page, pro_name, query, sort_num, start_date;
    sort_num = {
      create_at: -1
    };
    pro_name = $('#pro_name').val();
    start_date = parseInt($('.from.date').attr('time'));
    end_date = parseInt($('.to.date').attr('time'));
    query = {
      "create_at": {
        $gte: moment(start_date).format('YYYYMMDDHHmmss'),
        $lte: moment(end_date).format('YYYYMMDDHHmmss')
      },
      "stage": "已回传"
    };
    page = parseInt(request.start / request.length) + 1;
    if (request.length === -1) {
      page = 1;
      request.length = ($(".dataTables_info").text().match(/\d+\,?\d*/g)[2] || "1").replace(/\,/, "");
    }
    return settings.jqXHR = socket.emit("task_SF.list", pro_name, query, page, request.length, sort_num, function(result) {
      var bill, bills, i, json, len, ref;
      json = {
        "recordsTotal": 0,
        "recordsFiltered": 0,
        "data": []
      };
      console.log("resultresult:", result.bills_no);
      if (!result.err) {
        json.recordsTotal = result.bills_no;
        json.recordsFiltered = result.bills_no;
        bills = [];
        ref = result.bills;
        for (i = 0, len = ref.length; i < len; i++) {
          bill = ref[i];
          bill.batch_no = bill.batch_no || bill.bill_name;
          bill.deal_at = time_dis(bill.create_at, bill.upload_at);
          bill.relay_at = time_dis(moment(bill.create_at, "YYYYMMDDHHmmss").add('minutes', pro_all_conf[$('#pro_name').val()].return_in).format("YYYYMMDDHHmmss"), bill.upload_at);
          bill.scan_at = day_format(bill.create_at);
          bill.create_at = bill.create_at.substring(0, 4) + '/' + bill.create_at.substring(4, 6) + '/' + bill.create_at.substring(6, 8);
          bill.download_at = day_format(bill.download_at);
          bill.upload_at = day_format(bill.upload_at);
          bill.picture = bill.picture.length || 0;
          bill.stick_level = bill.stick_level || "普通";
          bills.push(bill);
        }
        json.data = bills;
      }
      return drawCallback(json);
    });
  };
};

table = $('#yewu_table').dataTable({
  "processing": true,
  "serverSide": true,
  "aLengthMenu": [[10, 50, 100, 500, 1000, -1], [10, 50, 100, 500, 1000, "全部"]],
  dom: 'Bifrtlp',
  buttons: ['copyFlash', 'excelFlash', 'pdfFlash'],
  "columns": title,
  "footerCallback": function(row, data, start, end, display) {
    var api;
    return api = this.api();
  },
  "language": {
    "sProcessing": "处理中...",
    "sLengthMenu": "显示 _MENU_ 项结果",
    "sZeroRecords": "没有匹配结果",
    "sInfo": "显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项",
    "sInfoEmpty": "显示第 0 至 0 项结果，共 0 项",
    "sInfoFiltered": "(由 _MAX_ 项结果过滤)",
    "sInfoPostFix": "",
    "sSearch": "搜索:",
    "sUrl": "",
    "sEmptyTable": "表中数据为空",
    "sLoadingRecords": "载入中...",
    "sInfoThousands": ",",
    "oPaginate": {
      "sFirst": "首页",
      "sPrevious": "上页",
      "sNext": "下页",
      "sLast": "末页"
    }
  },
  "ajax": $.fn.dataTable.pipeline({})
});

get_pro_sum = function() {
  return table.fnDraw();
};

export_yewu_table = function() {
  var project_name, query;
  project_name = $('#pro_name').val();
  query = {};
  return socket.emit("Report.export_yewu_table_src", project_name, query, function(result) {
    return console.log(result);
  });
};
